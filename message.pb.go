// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	Node
	Nodes
	OpCreateSyncNode
	FileMD5Info
	OpPushdirMd5Info
	OpPushSyncNode
	OpSendFile
	OpC2S
	OpGetFileInfo
	OpS2C
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OpID int32

const (
	OpID_OP_NONE             OpID = 0
	OpID_OP_CREATE_SYNC_NODE OpID = 1
	OpID_OP_REMOVE_SYNC_NODE OpID = 2
	OpID_OP_PUSH_SYNC_NODE   OpID = 3
	OpID_OP_PUSH_DIR_MD5     OpID = 4
	OpID_OP_GET_FILEINFO     OpID = 5
	OpID_OP_SEND_FILE        OpID = 6
)

var OpID_name = map[int32]string{
	0: "OP_NONE",
	1: "OP_CREATE_SYNC_NODE",
	2: "OP_REMOVE_SYNC_NODE",
	3: "OP_PUSH_SYNC_NODE",
	4: "OP_PUSH_DIR_MD5",
	5: "OP_GET_FILEINFO",
	6: "OP_SEND_FILE",
}
var OpID_value = map[string]int32{
	"OP_NONE":             0,
	"OP_CREATE_SYNC_NODE": 1,
	"OP_REMOVE_SYNC_NODE": 2,
	"OP_PUSH_SYNC_NODE":   3,
	"OP_PUSH_DIR_MD5":     4,
	"OP_GET_FILEINFO":     5,
	"OP_SEND_FILE":        6,
}

func (x OpID) String() string {
	return proto.EnumName(OpID_name, int32(x))
}
func (OpID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type FileOperation int32

const (
	FileOperation_FO_NONE     FileOperation = 0
	FileOperation_FO_DIFF     FileOperation = 1
	FileOperation_FO_DELETE   FileOperation = 2
	FileOperation_FO_NOCHANGE FileOperation = 3
)

var FileOperation_name = map[int32]string{
	0: "FO_NONE",
	1: "FO_DIFF",
	2: "FO_DELETE",
	3: "FO_NOCHANGE",
}
var FileOperation_value = map[string]int32{
	"FO_NONE":     0,
	"FO_DIFF":     1,
	"FO_DELETE":   2,
	"FO_NOCHANGE": 3,
}

func (x FileOperation) String() string {
	return proto.EnumName(FileOperation_name, int32(x))
}
func (FileOperation) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ErrorID int32

const (
	ErrorID_E_NONE          ErrorID = 0
	ErrorID_E_OK            ErrorID = 1
	ErrorID_E_ALREADY_EXIST ErrorID = 2
	ErrorID_E_ERROR         ErrorID = 3
)

var ErrorID_name = map[int32]string{
	0: "E_NONE",
	1: "E_OK",
	2: "E_ALREADY_EXIST",
	3: "E_ERROR",
}
var ErrorID_value = map[string]int32{
	"E_NONE":          0,
	"E_OK":            1,
	"E_ALREADY_EXIST": 2,
	"E_ERROR":         3,
}

func (x ErrorID) String() string {
	return proto.EnumName(ErrorID_name, int32(x))
}
func (ErrorID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Node struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Directory string `protobuf:"bytes,2,opt,name=directory" json:"directory,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Nodes struct {
	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *Nodes) Reset()                    { *m = Nodes{} }
func (m *Nodes) String() string            { return proto.CompactTextString(m) }
func (*Nodes) ProtoMessage()               {}
func (*Nodes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Nodes) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type OpCreateSyncNode struct {
	Nodes *Nodes `protobuf:"bytes,1,opt,name=nodes" json:"nodes,omitempty"`
}

func (m *OpCreateSyncNode) Reset()                    { *m = OpCreateSyncNode{} }
func (m *OpCreateSyncNode) String() string            { return proto.CompactTextString(m) }
func (*OpCreateSyncNode) ProtoMessage()               {}
func (*OpCreateSyncNode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *OpCreateSyncNode) GetNodes() *Nodes {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type FileMD5Info struct {
	Filename  string        `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Md5       string        `protobuf:"bytes,2,opt,name=md5" json:"md5,omitempty"`
	IsDir     bool          `protobuf:"varint,3,opt,name=isDir" json:"isDir,omitempty"`
	Operation FileOperation `protobuf:"varint,4,opt,name=operation,enum=main.FileOperation" json:"operation,omitempty"`
}

func (m *FileMD5Info) Reset()                    { *m = FileMD5Info{} }
func (m *FileMD5Info) String() string            { return proto.CompactTextString(m) }
func (*FileMD5Info) ProtoMessage()               {}
func (*FileMD5Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type OpPushdirMd5Info struct {
	ClientDir string         `protobuf:"bytes,1,opt,name=clientDir" json:"clientDir,omitempty"`
	ServerDir string         `protobuf:"bytes,2,opt,name=serverDir" json:"serverDir,omitempty"`
	Files     []*FileMD5Info `protobuf:"bytes,3,rep,name=files" json:"files,omitempty"`
}

func (m *OpPushdirMd5Info) Reset()                    { *m = OpPushdirMd5Info{} }
func (m *OpPushdirMd5Info) String() string            { return proto.CompactTextString(m) }
func (*OpPushdirMd5Info) ProtoMessage()               {}
func (*OpPushdirMd5Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *OpPushdirMd5Info) GetFiles() []*FileMD5Info {
	if m != nil {
		return m.Files
	}
	return nil
}

type OpPushSyncNode struct {
	Files []*FileMD5Info `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
}

func (m *OpPushSyncNode) Reset()                    { *m = OpPushSyncNode{} }
func (m *OpPushSyncNode) String() string            { return proto.CompactTextString(m) }
func (*OpPushSyncNode) ProtoMessage()               {}
func (*OpPushSyncNode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *OpPushSyncNode) GetFiles() []*FileMD5Info {
	if m != nil {
		return m.Files
	}
	return nil
}

type OpSendFile struct {
	Filename  string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	ClientDir string `protobuf:"bytes,2,opt,name=clientDir" json:"clientDir,omitempty"`
	ServerDir string `protobuf:"bytes,3,opt,name=serverDir" json:"serverDir,omitempty"`
	Data      string `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *OpSendFile) Reset()                    { *m = OpSendFile{} }
func (m *OpSendFile) String() string            { return proto.CompactTextString(m) }
func (*OpSendFile) ProtoMessage()               {}
func (*OpSendFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type OpC2S struct {
	Op             OpID              `protobuf:"varint,1,opt,name=op,enum=main.OpID" json:"op,omitempty"`
	CreateSyncNode *OpCreateSyncNode `protobuf:"bytes,2,opt,name=createSyncNode" json:"createSyncNode,omitempty"`
	PushSyncNode   *OpPushSyncNode   `protobuf:"bytes,3,opt,name=pushSyncNode" json:"pushSyncNode,omitempty"`
	PushDirMd5Info *OpPushdirMd5Info `protobuf:"bytes,4,opt,name=pushDirMd5Info" json:"pushDirMd5Info,omitempty"`
	SendFile       *OpSendFile       `protobuf:"bytes,5,opt,name=sendFile" json:"sendFile,omitempty"`
}

func (m *OpC2S) Reset()                    { *m = OpC2S{} }
func (m *OpC2S) String() string            { return proto.CompactTextString(m) }
func (*OpC2S) ProtoMessage()               {}
func (*OpC2S) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *OpC2S) GetCreateSyncNode() *OpCreateSyncNode {
	if m != nil {
		return m.CreateSyncNode
	}
	return nil
}

func (m *OpC2S) GetPushSyncNode() *OpPushSyncNode {
	if m != nil {
		return m.PushSyncNode
	}
	return nil
}

func (m *OpC2S) GetPushDirMd5Info() *OpPushdirMd5Info {
	if m != nil {
		return m.PushDirMd5Info
	}
	return nil
}

func (m *OpC2S) GetSendFile() *OpSendFile {
	if m != nil {
		return m.SendFile
	}
	return nil
}

type OpGetFileInfo struct {
	Filename  string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	ClientDir string `protobuf:"bytes,2,opt,name=clientDir" json:"clientDir,omitempty"`
	ServerDir string `protobuf:"bytes,3,opt,name=serverDir" json:"serverDir,omitempty"`
}

func (m *OpGetFileInfo) Reset()                    { *m = OpGetFileInfo{} }
func (m *OpGetFileInfo) String() string            { return proto.CompactTextString(m) }
func (*OpGetFileInfo) ProtoMessage()               {}
func (*OpGetFileInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type OpS2C struct {
	Op          OpID           `protobuf:"varint,1,opt,name=op,enum=main.OpID" json:"op,omitempty"`
	Err         ErrorID        `protobuf:"varint,2,opt,name=err,enum=main.ErrorID" json:"err,omitempty"`
	GetFileInfo *OpGetFileInfo `protobuf:"bytes,3,opt,name=getFileInfo" json:"getFileInfo,omitempty"`
}

func (m *OpS2C) Reset()                    { *m = OpS2C{} }
func (m *OpS2C) String() string            { return proto.CompactTextString(m) }
func (*OpS2C) ProtoMessage()               {}
func (*OpS2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *OpS2C) GetGetFileInfo() *OpGetFileInfo {
	if m != nil {
		return m.GetFileInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*Node)(nil), "main.Node")
	proto.RegisterType((*Nodes)(nil), "main.Nodes")
	proto.RegisterType((*OpCreateSyncNode)(nil), "main.opCreateSyncNode")
	proto.RegisterType((*FileMD5Info)(nil), "main.fileMD5Info")
	proto.RegisterType((*OpPushdirMd5Info)(nil), "main.opPushdirMd5Info")
	proto.RegisterType((*OpPushSyncNode)(nil), "main.opPushSyncNode")
	proto.RegisterType((*OpSendFile)(nil), "main.opSendFile")
	proto.RegisterType((*OpC2S)(nil), "main.opC2S")
	proto.RegisterType((*OpGetFileInfo)(nil), "main.opGetFileInfo")
	proto.RegisterType((*OpS2C)(nil), "main.opS2C")
	proto.RegisterEnum("main.OpID", OpID_name, OpID_value)
	proto.RegisterEnum("main.FileOperation", FileOperation_name, FileOperation_value)
	proto.RegisterEnum("main.ErrorID", ErrorID_name, ErrorID_value)
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 664 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0x9b, 0x5a,
	0x10, 0x7d, 0x18, 0x48, 0xec, 0x21, 0x76, 0xc8, 0x75, 0xde, 0x7b, 0xd6, 0xd3, 0x93, 0x9a, 0xb2,
	0x69, 0x1a, 0x55, 0x91, 0x4a, 0x65, 0x29, 0xdd, 0x54, 0xb2, 0xcc, 0x75, 0x82, 0x9a, 0x40, 0x74,
	0x71, 0xab, 0x66, 0x85, 0xa8, 0x7d, 0x93, 0x22, 0xc5, 0x80, 0x80, 0x7e, 0x44, 0xdd, 0x76, 0xd7,
	0x3f, 0xd0, 0x9f, 0xdb, 0xb9, 0x7c, 0x18, 0x9c, 0x45, 0xb2, 0xe8, 0x8e, 0x99, 0x33, 0x33, 0xe7,
	0xcc, 0xb9, 0x63, 0x43, 0x7f, 0xc5, 0xb3, 0x2c, 0xb8, 0xe1, 0xc7, 0x49, 0x1a, 0xe7, 0x31, 0x51,
	0x56, 0x41, 0x18, 0x19, 0x27, 0xa0, 0x38, 0xf1, 0x92, 0x13, 0x02, 0x4a, 0x14, 0xac, 0xf8, 0x48,
	0x3a, 0x90, 0x0e, 0x7b, 0xac, 0xf8, 0x26, 0xff, 0x43, 0x6f, 0x19, 0xa6, 0x7c, 0x91, 0xc7, 0xe9,
	0xdd, 0xa8, 0x53, 0x00, 0x4d, 0xc2, 0x78, 0x0e, 0xaa, 0xe8, 0xcc, 0xc8, 0x01, 0xa8, 0x91, 0xf8,
	0xc0, 0x5e, 0xf9, 0x50, 0x33, 0xe1, 0x58, 0x0c, 0x3e, 0x16, 0x18, 0x2b, 0x01, 0x63, 0x0c, 0x7a,
	0x9c, 0x4c, 0x53, 0x1e, 0xe4, 0xdc, 0xbb, 0x8b, 0x16, 0x05, 0xe1, 0xd3, 0xa6, 0x4b, 0xc2, 0x2e,
	0xad, 0xe9, 0xca, 0xea, 0xb6, 0x1f, 0x12, 0x68, 0xd7, 0xe1, 0x2d, 0xbf, 0xb0, 0xc6, 0x76, 0x74,
	0x1d, 0x93, 0xff, 0xa0, 0x2b, 0xc2, 0x96, 0xce, 0x75, 0x4c, 0x74, 0x90, 0x57, 0xcb, 0x71, 0xa5,
	0x52, 0x7c, 0x92, 0x7d, 0x50, 0xc3, 0xcc, 0x0a, 0xd3, 0x91, 0x8c, 0xb9, 0x2e, 0x2b, 0x03, 0xf2,
	0x12, 0x7a, 0x71, 0xc2, 0xd3, 0x20, 0x0f, 0xe3, 0x68, 0xa4, 0x20, 0x32, 0x30, 0x87, 0x25, 0xb5,
	0x18, 0xe5, 0xd6, 0x10, 0x6b, 0xaa, 0x8c, 0xaf, 0x42, 0xfd, 0xe5, 0xe7, 0xec, 0x13, 0xee, 0x7e,
	0xb1, 0x2c, 0xa5, 0xa0, 0x35, 0x8b, 0xdb, 0x90, 0x47, 0xb9, 0x20, 0x28, 0xb5, 0x34, 0x09, 0x81,
	0x66, 0x3c, 0xfd, 0xc2, 0x53, 0x81, 0x56, 0xc6, 0xad, 0x13, 0xe4, 0x19, 0xa8, 0x82, 0x2b, 0x43,
	0x61, 0xc2, 0xaf, 0xbd, 0x86, 0xbe, 0x5a, 0x94, 0x95, 0xb8, 0xf1, 0x1a, 0x06, 0x25, 0xf1, 0xda,
	0xb4, 0x75, 0xab, 0xf4, 0x48, 0xeb, 0x37, 0x80, 0x38, 0xf1, 0x78, 0xb4, 0x9c, 0x61, 0xf8, 0xa0,
	0x71, 0x1b, 0x9b, 0x74, 0x1e, 0xdc, 0x44, 0xbe, 0xbf, 0x09, 0x1e, 0xcd, 0x32, 0xc8, 0x83, 0xc2,
	0x47, 0x3c, 0x1a, 0xf1, 0x6d, 0xfc, 0xec, 0x80, 0x8a, 0x8f, 0x6d, 0x7a, 0xc8, 0xda, 0x89, 0x93,
	0x82, 0x6f, 0x50, 0x1f, 0x45, 0x9c, 0xd8, 0x16, 0xc3, 0x2c, 0x79, 0x03, 0x83, 0xc5, 0xc6, 0x3d,
	0x14, 0xd4, 0x9a, 0xf9, 0x4f, 0x5d, 0xb7, 0x79, 0x2d, 0xec, 0x5e, 0x35, 0x39, 0x81, 0x9d, 0xa4,
	0x65, 0x4c, 0x21, 0x4d, 0x33, 0xf7, 0xeb, 0xee, 0xb6, 0x69, 0x6c, 0xa3, 0x52, 0x30, 0x8b, 0xd8,
	0x5a, 0xbf, 0x65, 0xa1, 0xbe, 0xc5, 0xbc, 0xf9, 0xd2, 0xec, 0x5e, 0x35, 0x79, 0x01, 0xdd, 0xac,
	0xf2, 0x75, 0xa4, 0x16, 0x9d, 0x7a, 0xdd, 0x59, 0xfb, 0xcd, 0xd6, 0x15, 0xc6, 0x0d, 0xf4, 0xe3,
	0xe4, 0x94, 0xe7, 0x22, 0x78, 0xf4, 0x86, 0xff, 0xe0, 0x29, 0x8c, 0xef, 0xc2, 0x75, 0xcf, 0x9c,
	0x3e, 0xe8, 0xfa, 0x13, 0x90, 0x79, 0x5a, 0x8e, 0x1e, 0x98, 0xfd, 0x12, 0xc4, 0x44, 0x9c, 0x22,
	0x2e, 0x10, 0x32, 0x06, 0xed, 0xa6, 0x11, 0x5b, 0xb9, 0x3a, 0xac, 0xa7, 0xb4, 0xf6, 0x60, 0xed,
	0xba, 0xa3, 0x5f, 0x12, 0x28, 0x82, 0x84, 0x68, 0xb0, 0xed, 0x5e, 0xfa, 0x8e, 0xeb, 0x50, 0xfd,
	0x2f, 0xf2, 0x2f, 0x0c, 0x31, 0x98, 0x32, 0x3a, 0x99, 0x53, 0xdf, 0xbb, 0x72, 0xa6, 0x08, 0x58,
	0x54, 0x97, 0x2a, 0x80, 0xd1, 0x0b, 0xf7, 0x7d, 0x1b, 0xe8, 0x90, 0xbf, 0x61, 0x0f, 0x81, 0xcb,
	0x77, 0xde, 0x59, 0x2b, 0x2d, 0x93, 0x21, 0xec, 0xd6, 0x69, 0xcb, 0x66, 0x3e, 0x9e, 0xba, 0xae,
	0x54, 0xc9, 0x53, 0x3a, 0xf7, 0x67, 0xf6, 0x39, 0xb5, 0x9d, 0x99, 0xab, 0xab, 0xf8, 0x2f, 0xb0,
	0x83, 0x49, 0x8f, 0x3a, 0x56, 0x91, 0xd5, 0xb7, 0x8e, 0x6c, 0xe8, 0x6f, 0xfc, 0xb0, 0x85, 0xc4,
	0x99, 0x5b, 0x4b, 0x2c, 0x03, 0xcb, 0x9e, 0xcd, 0x50, 0x56, 0x1f, 0x7a, 0x22, 0xa0, 0xe7, 0x74,
	0x2e, 0xc4, 0xec, 0x82, 0x56, 0x14, 0x4e, 0xcf, 0x26, 0xce, 0x29, 0xca, 0x38, 0x9a, 0xc0, 0x76,
	0x65, 0x16, 0x01, 0xd8, 0xa2, 0xf5, 0x8c, 0x2e, 0x28, 0xd4, 0x77, 0xdf, 0xe2, 0x00, 0x94, 0x44,
	0xfd, 0xc9, 0x39, 0x2e, 0x6c, 0x5d, 0xf9, 0xf4, 0x83, 0xed, 0xcd, 0x71, 0x0c, 0x52, 0x50, 0x9f,
	0x32, 0xe6, 0x32, 0x5d, 0xfe, 0xb8, 0x55, 0xfc, 0xf5, 0xbe, 0xfa, 0x1d, 0x00, 0x00, 0xff, 0xff,
	0xd5, 0xd1, 0x06, 0x5c, 0x8b, 0x05, 0x00, 0x00,
}
